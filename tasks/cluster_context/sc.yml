- name: Attempt login to cluster sc via backplane
  include_tasks: tasks/common/shell.yml
  vars:
    description: Attempt login to cluster sc via backplane
    ignore_errors: true
    command: |
      ocm-backplane login {{ env.SC_NAME }}

- name: Set logged in to sc
  set_fact:
    loggedin_sc: "{{ false if cmd.rc else true }}"

- name: "Tasks on sc"
  when: loggedin_sc
  block:
    - name: Get project {{ env.HCP_NAMESPACE }}
      include_tasks: tasks/common/shell.yml
      vars:
        description: get project {{ env.HCP_NAMESPACE }}
        ignore_errors: true
        command: |
          oc get project {{ env.HCP_NAMESPACE }}

    - name: Get project {{ env.HCP_NAMESPACE }}
      include_tasks: tasks/common/shell.yml
      vars:
        description: get {{ env.HCP_NAMESPACE }} project
        ignore_errors: true
        command: |
          oc get project ocm-{{ env.OCM_ENVIRONMENT }}-{{ env.CLUSTER_ID }} -o json

    - name: Get warning events in hcp namespace
      include_tasks: tasks/common/shell.yml
      vars:
        description: Warning events in hcp namespace
        command: |
          kubectl events -n {{ env.HCP_NAMESPACE }} --types=Warning

    - name: Get SC managedcluster .status.conditions
      include_tasks: tasks/common/shell.yml
      vars:
        description: SC managedcluster .status.conditions
        command: |
          oc get managedcluster {{ env.CLUSTER_ID }} -o json | jq -r .status.conditions

    - name: Get manifestwork resourceStatus
      include_tasks: tasks/common/shell.yml
      vars:
        description: Manifestwork resourceStatus
        ignore_errors: true
        command: |
          oc get manifestwork -n {{ env.MC_NAME }} {{ env.CLUSTER_ID }} -o json | \
          jq -r '.status.resourceStatus.manifests[]|[.resourceMeta.name,.conditions[]]'

    - name: Get manifestwork hosted-klusterlet resourceStatus
      include_tasks: tasks/common/shell.yml
      vars:
        description: Manifestwork hosted-klusterlet resourceStatus
        ignore_errors: true
        command: |
          oc get manifestwork -n {{ env.MC_NAME }} {{ env.CLUSTER_ID }}-hosted-klusterlet -o json | \
          jq -r '.status.resourceStatus.manifests[]|[.resourceMeta.name,.conditions[]]'

    - name: Get manifestwork workers resourceStatus
      include_tasks: tasks/common/shell.yml
      vars:
        description: Manifestwork workers resourceStatus
        ignore_errors: true
        command: |
          oc get manifestwork -n {{ env.MC_NAME }} {{ env.CLUSTER_ID }}-workers -o json | \
          jq -r '.status.resourceStatus.manifests[].statusFeedback.values[]|[.name,.fieldValue.string]'
