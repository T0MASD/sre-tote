- name: Attempt login to cluster sc via backplane
  include_tasks: tasks/common/shell.yml
  vars:
    description: Attempt login to cluster sc via backplane
    ignore_errors: true
    command: |
      ocm-backplane login {{ env.SC_NAME }}

- name: Set logged in to sc
  set_fact:
    loggedin_sc: "{{ false if cmd.rc else true }}"

- name: "Tasks on sc"
  when: loggedin_sc
  block:
    - name: Get project ocm-{{ env.OCM_ENVIRONMENT }}-{{ env.CLUSTER_ID }} 
      include_tasks: tasks/common/shell.yml
      vars:
        description: get project ocm-{{ env.OCM_ENVIRONMENT }}-{{ env.CLUSTER_ID }} 
        ignore_errors: true
        command: |
          oc get project ocm-{{ env.OCM_ENVIRONMENT }}-{{ env.CLUSTER_ID }} 

    - name: Get events in ocm-{{ env.OCM_ENVIRONMENT }}-{{ env.CLUSTER_ID }} 
      include_tasks: tasks/common/shell.yml
      vars:
        description: Get events in ocm-{{ env.OCM_ENVIRONMENT }}-{{ env.CLUSTER_ID }} 
        command: |
          oc get events -n ocm-{{ env.OCM_ENVIRONMENT }}-{{ env.CLUSTER_ID }}  \
          | jq -r '.items[] | [.lastTimestamp, .count, .reason, .message] | @tsv' 

    - name: Get events in {{ env.CLUSTER_ID }} 
      include_tasks: tasks/common/shell.yml
      vars:
        description: Get events in {{ env.CLUSTER_ID }} 
        command: |
          oc get events -n {{ env.CLUSTER_ID }} -o json \
          | jq -r '.items[] | [.lastTimestamp, .count, .reason, .message] | @tsv' 

    - name: Get events in {{ env.MC_NAME }} 
      include_tasks: tasks/common/shell.yml
      vars:
        description: Get events in {{ env.MC_NAME }} 
        command: |
          oc get events -n {{ env.MC_NAME }} -o json \
          | jq -r '.items[] | [.lastTimestamp, .count, .reason, .message] | @tsv' 

    - name: Get SC managedcluster .status.conditions
      include_tasks: tasks/common/shell.yml
      vars:
        description: SC managedcluster .status.conditions
        command: |
          oc get managedcluster {{ env.CLUSTER_ID }} -o json \
          | jq -r '.status.conditions[] | [.lastTransitionTime, .status, .message ] | @tsv' 

    - name: Get {{ env.CLUSTER_ID }} manifestworks
      include_tasks: tasks/common/shell.yml
      vars:
        description: Get {{ env.CLUSTER_ID }} manifestworks
        ignore_errors: true
        command: |
          oc get manifestwork -n {{ env.MC_NAME }} -o json \
          | jq -r '.items[].metadata | select ( .name | contains("{{ env.CLUSTER_ID }}") ) | [.creationTimestamp, .name, (.finalizers | join(",")) ]| @tsv'

    - name: Get manifestworks for namespaces containing {{ env.CLUSTER_ID }} 
      include_tasks: tasks/common/shell.yml
      vars:
        description: Manifestwork names and conditions length in namespaces containing {{ env.CLUSTER_ID }}
        ignore_errors: true
        command: |
          oc get manifestwork -n {{ env.MC_NAME }} -o json \
          | jq -r '.items[].status.resourceStatus.manifests[] | select(.resourceMeta.namespace | contains("{{ env.CLUSTER_ID }}") ) | [.resourceMeta.namespace, .resourceMeta.kind, .resourceMeta.name, (.conditions | length)] | @tsv'

    - name: Get ssl orders for {{ env.CLUSTER_ID }}
      include_tasks: tasks/common/shell.yml
      vars:
        description: Get ssl orders for {{ env.CLUSTER_ID }}
        ignore_errors: true
        command: |
          oc get orders -n openshift-acm-policies | grep {{ env.CLUSTER_ID }}

    - name: Get ssl requests for {{ env.CLUSTER_ID }}
      include_tasks: tasks/common/shell.yml
      vars:
        description: Get ssl requests for {{ env.CLUSTER_ID }}
        ignore_errors: true
        command: |
          oc get challenge -n openshift-acm-policies | grep {{ env.CLUSTER_ID }}

    - name: Get policy {{ env.CLUSTER_ID }}
      include_tasks: tasks/common/shell.yml
      vars:
        description: Get policy {{ env.CLUSTER_ID }}
        ignore_errors: true
        command: |
          oc get policy -n {{ env.CLUSTER_ID }}
