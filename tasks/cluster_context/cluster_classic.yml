- name: Login to ocm {{env.OCM_ENVIRONMENT}}
  include_tasks: tasks/common/shell.yml
  vars:
    description: Login to ocm {{env.OCM_ENVIRONMENT}}
    command: |
      ocm login --token=$OFFLINE_ACCESS_TOKEN --url=$OCM_ENVIRONMENT
    template_name: common/blank.md.j2

- name: Login to {{ env.CLUSTER_NAME }} cluster via backplane
  include_tasks: tasks/common/shell.yml
  vars:
    description: Login to {{ env.CLUSTER_NAME }} cluster via backplane
    command: ocm-backplane login $CLUSTER_ID

- name: Get {{env.CLUSTER_NAME}} cluster nodes
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster nodes
    ignore_errors: true
    command: |
      oc get nodes -o wide &&
      echo ---------- &&
      oc adm top nodes

- name: Get {{env.CLUSTER_NAME}} cluster machine information
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster machine information
    ignore_errors: true
    command: |
      oc get machinesets -A -o wide
      echo ---------- &&
      oc get machines -A -o wide

- name: Get {{env.CLUSTER_NAME}} cluster operators
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster operators
    ignore_errors: true
    command: |
      oc get co

- name: Get {{env.CLUSTER_NAME}} cluster degraded operators
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster degraded operators
    ignore_errors: true
    command: |
      oc get co -o json | jq -r '.items[].status | select (.conditions) '.conditions | jq -r '.[] | select( (.type == "Degraded") and (.status == "True") )'

- name: Get {{env.CLUSTER_NAME}} cluster upgrade
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster upgrade status
    ignore_errors: true
    command: |
      oc get upgrade -A &&
      echo ---------- &&
      oc get clusterversion

- name: Get {{env.CLUSTER_NAME}} cluster alerts
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster alert status
    ignore_errors: true
    command: |
      oc rsh -n openshift-monitoring alertmanager-main-0 amtool alert query --alertmanager.url http://localhost:9093 -o extended

- name: Get {{env.CLUSTER_NAME}} cluster subjectpermission
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster subjectpermission
    ignore_errors: true
    command: |
      oc get subjectpermission -n openshift-rbac-permissions

- name: Get {{env.CLUSTER_NAME}} cluster identityProviders
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster identityProviders
    ignore_errors: true
    command: |
      oc get oauth cluster -o json | jq -r .spec.identityProviders

- name: Get {{env.CLUSTER_NAME}} cluster ssl issuer status
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster ssl issuer status
    ignore_errors: true
    command: |
      oc get clusterissuer public-issuer -o json | jq -r .status

- name: Get {{env.CLUSTER_NAME}} networkType
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster networkType
    ignore_errors: true
    command: |
      oc get Network cluster -o json | jq -r .status.networkType

- name: Add NETWORKTYPE={{ cmd.stdout }} to the env
  include_tasks: tasks/common/update_env.yml
  vars:
    env_updates:
      NETWORKTYPE: '{{ cmd.stdout }}'

- name: Get {{env.CLUSTER_NAME}} network resources
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster network resources
    ignore_errors: true
    command: |
      oc get all,ep,cm -n openshift-ovn-kubernetes
  when: env.NETWORKTYPE == 'OVNKubernetes'

- name: Get etcd pods
  include_tasks: tasks/common/shell.yml
  vars:
    description: Get cluster etcd pods
    command: oc get pods -n openshift-etcd
    ignore_errors: true

- name: Set cluster etcd pod
  include_tasks: tasks/common/shell.yml
  vars:
    description: Get cluster etcd pod
    command: |
      oc get pods -l k8s-app=etcd -n openshift-etcd \
      -o jsonpath='{.items[*].metadata.name}' | awk '{ print $1 }'
    ignore_errors: true

- name: Add ETC_POD={{ cmd.stdout }} to the env
  include_tasks: tasks/common/update_env.yml
  vars:
    env_updates:
      ETC_POD: '{{ cmd.stdout }}'
  when: cmd.stdout != ''

- name: Get {{ env.ETC_POD }} pod etcdctl endpoint status
  include_tasks: tasks/common/shell.yml
  vars:
    description: etcdctl endpoint status
    command: |
      oc exec -it $ETC_POD -n openshift-etcd -c etcdctl -- sh -c "etcdctl endpoint status --cluster -w table"
    ignore_errors: true
  when: env.ETC_POD is defined

- name: Get {{env.ETC_POD}} pod etcdctl endpoint health
  include_tasks: tasks/common/shell.yml
  vars:
    description: etcdctl endpoint health
    command: |
      oc exec -it $ETC_POD -n openshift-etcd -c etcdctl -- sh -c "etcdctl endpoint health -w table"
    ignore_errors: true
  when: env.ETC_POD is defined


- name: Get {{env.ETC_POD}} pod etcdctl member list
  include_tasks: tasks/common/shell.yml
  vars:
    description: etcdctl members
    command: |
      oc exec -it $ETC_POD -n openshift-etcd -c etcdctl -- sh -c "etcdctl member list -w table"
    ignore_errors: true
  when: env.ETC_POD is defined


- name: Get {{env.ETC_POD}} resources
  include_tasks: tasks/common/shell.yml
  vars:
    description: etcdctl resources
    command: |
      echo oc exec -it $ETC_POD -n openshift-etcd -c etcdctl -- sh -c "etcdctl get / --prefix --keys-only | grep -v ^$"
    ignore_errors: true
  when: env.ETC_POD is defined

