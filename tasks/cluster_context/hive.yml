- name: Login to ocm prod
  include_tasks: tasks/common/shell.yml
  vars:
    description: Login to ocm prod
    command: |
      ocm login --token=$OFFLINE_ACCESS_TOKEN --url=production
    template_name: common/blank.md.j2

- name: Login to {{ env.CLUSTER_NAME }} cluster hive {{ env.HIVE_NAME }} via backplane
  include_tasks: tasks/common/shell.yml
  vars:
    description: Login to hive {{ env.HIVE_NAME }} via backplane
    command: |
      ocm-backplane login {{ env.HIVE_NAME }}
    template_name: common/blank.md.j2

- name: Get cluster deployment in uhc-{{env.OCM_ENVIRONMENT}}-{{env.CLUSTER_ID}}
  include_tasks: tasks/common/shell.yml
  vars:
    description: Get cluster deployment
    command: |
      oc get clusterdeployment -n uhc-$OCM_ENVIRONMENT-$CLUSTER_ID

- name: Get cluster project claim in uhc-{{env.OCM_ENVIRONMENT}}-{{env.CLUSTER_ID}}
  include_tasks: tasks/common/shell.yml
  vars:
    description: Get cluster project claim
    command: |
      oc get projectclaim -n uhc-$OCM_ENVIRONMENT-$CLUSTER_ID

- name: Get cluster install pod
  include_tasks: tasks/common/shell.yml
  vars:
    description: Get cluster install pod
    command: |
      oc get pod -n uhc-$OCM_ENVIRONMENT-$CLUSTER_ID

- name: Get cluster clustersync
  include_tasks: "tasks/common/shell.yml"
  vars:
    description: Get clustersync
    command: |
      oc get clustersync -n uhc-$OCM_ENVIRONMENT-$CLUSTER_ID -o json | jq -r .items[].status.conditions

- name: Get cluster account from aws-account-operator
  include_tasks: "tasks/common/shell.yml"
  vars:
    description: Get cluster account from aws-account-operator in uhc-{{env.OCM_ENVIRONMENT}}-{{env.CLUSTER_ID}} claimLinkNamespace
    command: |
      oc get account -n aws-account-operator -o json | jq -r \
      '.items[] | select(.spec.claimLinkNamespace=="uhc-{{env.OCM_ENVIRONMENT}}-{{env.CLUSTER_ID}}").status'

- name: Get cluster certman certificaterequest
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster certman certificaterequest
    ignore_errors: true
    command: |
      oc get certificaterequest.certman.managed.openshift.io -n uhc-$OCM_ENVIRONMENT-$CLUSTER_ID -o json | jq -r .items[].status
    stdout_to_json: true

- name: Get cluster certman operator logs
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster certman operator logs
    ignore_errors: true
    command: |
      oc logs -n certman-operator -l name=certman-operator | grep {{env.CLUSTER_ID}}
    stdout_to_json: true
  when: cmd.json.status != 'Success'
