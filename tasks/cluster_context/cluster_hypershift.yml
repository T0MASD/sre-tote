- name: Login to ocm {{env.OCM_ENVIRONMENT}}
  include_tasks: tasks/common/shell.yml
  vars:
    description: Login to ocm {{env.OCM_ENVIRONMENT}}
    command: |
      ocm login --token=$OFFLINE_ACCESS_TOKEN --url=$OCM_ENVIRONMENT
    template_name: common/blank.md.j2

- name: Login to {{ env.CLUSTER_NAME }} cluster via backplane
  include_tasks: tasks/common/shell.yml
  vars:
    description: Login to {{ env.CLUSTER_NAME }} cluster via backplane
    command: ocm-backplane login $CLUSTER_ID

- name: Get {{env.CLUSTER_NAME}} cluster operators
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster operators
    ignore_errors: true
    command: |
      oc get co

- name: Get {{env.CLUSTER_NAME}} cluster degraded operators
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster degraded operators
    ignore_errors: true
    command: |
      oc get co -o json | jq -r '.items[].status | select (.conditions) '.conditions | jq -r '.[] | select( (.type == "Degraded") and (.status == "True") )'

- name: Get {{env.CLUSTER_NAME}} cluster alerts
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster alert status
    ignore_errors: true
    command: |
      oc rsh -n openshift-monitoring alertmanager-main-0 amtool alert query --alertmanager.url http://localhost:9093 -o extended

- name: Get {{env.CLUSTER_NAME}} cluster identityProviders
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster identityProviders
    ignore_errors: true
    command: |
      oc get oauth cluster -o json | jq -r .spec.identityProviders

- name: Get {{env.CLUSTER_NAME}} cluster ssl issuer status
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster ssl issuer status
    ignore_errors: true
    command: |
      oc get clusterissuer public-issuer -o json | jq -r .status

- name: Get {{env.CLUSTER_NAME}} networkType
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster networkType
    ignore_errors: true
    command: |
      oc get Network cluster -o json | jq -r .status.networkType

- name: Add NETWORKTYPE={{ cmd.stdout }} to the env
  include_tasks: tasks/common/update_env.yml
  vars:
    env_updates:
      NETWORKTYPE: '{{ cmd.stdout }}'

- name: Get {{env.CLUSTER_NAME}} network resources
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster network resources
    ignore_errors: true
    command: |
      oc get all,ep,cm -n openshift-ovn-kubernetes
  when: env.NETWORKTYPE == 'OVNKubernetes'

- name: Get {{env.CLUSTER_NAME}} cluster dns
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster dns
    command: |
      oc get dns cluster -oyaml

- name: Get {{env.CLUSTER_NAME}} cluster ingress dnsrecords
  include_tasks: tasks/common/shell.yml
  vars:
    description: Cluster dns
    ignore_errors: true
    command: |
      oc get dnsrecords.ingress.operator.openshift.io -n openshift-ingress-operator default-wildcard -o yaml

- name: Get {{env.CLUSTER_NAME}} cluster version
  include_tasks: tasks/common/shell.yml
  vars:
    description: Get {{env.CLUSTER_NAME}} cluster version
    ignore_errors: true
    command: |
      oc get clusterversion

- name: Verify {{env.CLUSTER_NAME}} cluster webhook config
  include_tasks: tasks/common/shell.yml
  vars:
    description: Verify {{env.CLUSTER_NAME}} cluster webhook config url contains {{env.CLUSTER_ID}} 
    ignore_errors: true
    command: |
      oc get validatingwebhookconfiguration sre-regular-user-validation -o json | jq -r '.webhooks[].clientConfig.url' | grep {{env.CLUSTER_ID}}
